The ``2-matrix_divided`` module
=============================
Using ``matrix_divided(matrix, div)``
---------------------
Import module needs to be tested:
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Initalize matrix:
	>>> matrix = [
	...	[1, 2, 3],
	...	[4, 5, 6]
	... ]

Follows all requires:
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Matrix lists should be integers or float:
	>>> matrix[0][1] = "a"
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	  ....
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix lists length not same:
	>>> matrix[0][1] = 2
	>>> matrix[0].append(9)
	>>> matrix_divided(matrix, 3)
	Traceback (most recent call last):
	  ....
	TypeError: Each row of the matrix must have the same size

Orignal matrix should not be modified:
	>>> matrix[0].pop()
	9
	>>> matrix_divided(matrix, 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
	>>> matrix == [[1, 2, 3], [4, 5, 6]]
	True

Div must be intger:
	>>> matrix_divided(matrix, 'a')
	Traceback (most recent call last):
	  ....
	TypeError: div must be a number

Div can't be equal 0:
	>>> matrix_divided(matrix, 0)
	Traceback (most recent call last):
	  ....
	ZeroDivisionError: division by zero

Lists could be empty:
	>>> matrix = [[], []]
	>>> matrix_divided(matrix, 2)
	[[], []]
